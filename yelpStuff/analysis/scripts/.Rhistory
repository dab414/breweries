## convert relevant variables to numeric for correlations
relColumns <- yelp %>%
select(contains('totalhours'), contains('time'), price_range_moderate:accepts_apple_pay_yes, my_ratings, reviews, breweriesToPpl) %>%
colnames()
yelp[, relColumns] <- sapply(yelp[,relColumns], as.numeric)
m1 <- rcorr(as.matrix(yelp[,relColumns]))
## save out only correlations related to ratings
rs <- as.data.frame(m1$r)['my_ratings',]
ps <- as.data.frame(m1$P)['my_ratings',]
## keep significant correlations
critical_ps <- ps %>%
select(-my_ratings) %>%
gather(variable, p_value) %>%
filter(p_value < .05)
rs <- rs %>%
select(-my_ratings) %>%
gather(variable, r_value)
critical_rs <- rs[rs$variable %in% critical_ps$variable,]
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
filter(parking != 'Valet', parking != 'Validated') %>%
group_by(parking, take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = parking, y = ratings, group = factor(take_out))) + geom_bar(stat = 'identity', aes(fill = factor(take_out)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5)+ theme_bw() +
xlab('Type of Available Parking') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery have take out?')) + scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
ylab('Average Rating') + xlab('Price Range')
options(warn = -1)
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range, accepts_credit_cards) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings, group = factor(accepts_credit_cards))) + geom_bar(stat = 'identity', aes(fill = factor(accepts_credit_cards)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5) + theme_bw() +
xlab('Price Range') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery accept credit cards?')) + scale_fill_manual(values = c('black', 'light grey'))
## Group breweries per capita
yelp <- yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
arrange(breweriesToPpl) %>%
mutate(rank = 1:(nrow(.))) %>%
mutate(breweriesToPplFactor = factor(ifelse(rank < 16, 'Low', ifelse(rank > 33, 'High', 'Medium')))) %>%
select(state, breweriesToPplFactor) %>%
inner_join(yelp, by = 'state')
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
ggplot(aes(x = reorder(state, breweriesToPpl, sum), y = breweriesToPpl, group = 1)) + geom_line() + coord_flip() + xlab('State (increasing in ratio of breweries to people)') +
ylab('Breweries Per Capita') + theme_bw() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
yelp %>%
mutate(breweriesToPplFactor = factor(breweriesToPplFactor, levels = levels(yelp$breweriesToPplFactor)[c(3,1,2)]),
take_out = recode(take_out, 'Yes' = 'Take Out Yes', 'No' = 'Take Out No')) %>%
yelp <- yelp %>%
mutate(breweriesToPplFactor = factor(breweriesToPplFactor, levels = levels(yelp$breweriesToPplFactor)[c(3,1,2)]),
take_out = recode(take_out, 'Yes' = 'Take Out Yes', 'No' = 'Take Out No'))
yelp %>%
group_by(breweriesToPplFactor, bike_parking, take_out) %>%
summarize(rating = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = breweriesToPplFactor, y = rating, group = bike_parking)) +
geom_bar(stat = 'identity', aes(fill = bike_parking), position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = rating - se, ymax = rating + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~take_out) +
ylim(0,5) +
scale_fill_manual(values = c('black','light grey'), name = 'Bike Parking Available') +
theme_bw() +
xlab('Breweries Per Capita') +
ylab('Yelp Rating') +
theme(legend.position = 'top',
strip.background = element_rect(fill = 'white', color = 'black'))
yelp <- yelp %>%
mutate(breweriesToPplFactor = factor(breweriesToPplFactor, levels = levels(yelp$breweriesToPplFactor)[c('Low', 'Medium', 'High')]),
take_out = recode(take_out, 'Yes' = 'Take Out Yes', 'No' = 'Take Out No'))
yelp %>%
group_by(breweriesToPplFactor, bike_parking, take_out) %>%
summarize(rating = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = breweriesToPplFactor, y = rating, group = bike_parking)) +
geom_bar(stat = 'identity', aes(fill = bike_parking), position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = rating - se, ymax = rating + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~take_out) +
ylim(0,5) +
scale_fill_manual(values = c('black','light grey'), name = 'Bike Parking Available') +
theme_bw() +
xlab('Breweries Per Capita') +
ylab('Yelp Rating') +
theme(legend.position = 'top',
strip.background = element_rect(fill = 'white', color = 'black'))
library(Hmisc)
library(tidyverse)
library(data.table)
yelp <- read.csv('../data/cleanYelp.csv')
yelp
yelp %>%
gather(rating_type, rating, ratings, my_ratings) %>%
mutate(rating_type = fct_recode(rating_type, 'Yelp Ratings' = 'ratings', 'My Converted Ratings' = 'my_ratings')) %>%
ggplot(aes(x = rating)) + geom_density(fill = 'blue', alpha = .8) + xlab('Ratings') + facet_wrap(~rating_type) +
theme_bw()
## convert relevant variables to numeric for correlations
relColumns <- yelp %>%
select(contains('totalhours'), contains('time'), price_range_moderate:accepts_apple_pay_yes, my_ratings, reviews, breweriesToPpl) %>%
colnames()
yelp[, relColumns] <- sapply(yelp[,relColumns], as.numeric)
m1 <- rcorr(as.matrix(yelp[,relColumns]))
## save out only correlations related to ratings
rs <- as.data.frame(m1$r)['my_ratings',]
ps <- as.data.frame(m1$P)['my_ratings',]
## keep significant correlations
critical_ps <- ps %>%
select(-my_ratings) %>%
gather(variable, p_value) %>%
filter(p_value < .05)
rs <- rs %>%
select(-my_ratings) %>%
gather(variable, r_value)
critical_rs <- rs[rs$variable %in% critical_ps$variable,]
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
filter(parking != 'Valet', parking != 'Validated') %>%
group_by(parking, take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = parking, y = ratings, group = factor(take_out))) + geom_bar(stat = 'identity', aes(fill = factor(take_out)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5)+ theme_bw() +
xlab('Type of Available Parking') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery have take out?')) + scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
ylab('Average Rating') + xlab('Price Range')
options(warn = -1)
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range, accepts_credit_cards) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings, group = factor(accepts_credit_cards))) + geom_bar(stat = 'identity', aes(fill = factor(accepts_credit_cards)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5) + theme_bw() +
xlab('Price Range') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery accept credit cards?')) + scale_fill_manual(values = c('black', 'light grey'))
## Group breweries per capita
yelp <- yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
arrange(breweriesToPpl) %>%
mutate(rank = 1:(nrow(.))) %>%
mutate(breweriesToPplFactor = factor(ifelse(rank < 16, 'Low', ifelse(rank > 33, 'High', 'Medium')))) %>%
select(state, breweriesToPplFactor) %>%
inner_join(yelp, by = 'state')
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
ggplot(aes(x = reorder(state, breweriesToPpl, sum), y = breweriesToPpl, group = 1)) + geom_line() + coord_flip() + xlab('State (increasing in ratio of breweries to people)') +
ylab('Breweries Per Capita') + theme_bw() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
summary(yelp$breweriesToPplFactor)
100/3
library(Hmisc)
library(tidyverse)
library(data.table)
yelp <- read.csv('../data/cleanYelp.csv')
yelp
yelp %>%
gather(rating_type, rating, ratings, my_ratings) %>%
mutate(rating_type = fct_recode(rating_type, 'Yelp Ratings' = 'ratings', 'My Converted Ratings' = 'my_ratings')) %>%
ggplot(aes(x = rating)) + geom_density(fill = 'blue', alpha = .8) + xlab('Ratings') + facet_wrap(~rating_type) +
theme_bw()
## convert relevant variables to numeric for correlations
relColumns <- yelp %>%
select(contains('totalhours'), contains('time'), price_range_moderate:accepts_apple_pay_yes, my_ratings, reviews, breweriesToPpl) %>%
colnames()
yelp[, relColumns] <- sapply(yelp[,relColumns], as.numeric)
m1 <- rcorr(as.matrix(yelp[,relColumns]))
## save out only correlations related to ratings
rs <- as.data.frame(m1$r)['my_ratings',]
ps <- as.data.frame(m1$P)['my_ratings',]
## keep significant correlations
critical_ps <- ps %>%
select(-my_ratings) %>%
gather(variable, p_value) %>%
filter(p_value < .05)
rs <- rs %>%
select(-my_ratings) %>%
gather(variable, r_value)
critical_rs <- rs[rs$variable %in% critical_ps$variable,]
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
filter(parking != 'Valet', parking != 'Validated') %>%
group_by(parking, take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = parking, y = ratings, group = factor(take_out))) + geom_bar(stat = 'identity', aes(fill = factor(take_out)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5)+ theme_bw() +
xlab('Type of Available Parking') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery have take out?')) + scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
ylab('Average Rating') + xlab('Price Range')
options(warn = -1)
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range, accepts_credit_cards) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings, group = factor(accepts_credit_cards))) + geom_bar(stat = 'identity', aes(fill = factor(accepts_credit_cards)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5) + theme_bw() +
xlab('Price Range') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery accept credit cards?')) + scale_fill_manual(values = c('black', 'light grey'))
## Group breweries per capita
yelp <- yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
arrange(breweriesToPpl) %>%
mutate(rank = 1:(nrow(.))) %>%
mutate(breweriesToPplFactor = factor(ifelse(rank < 50/3, 'Low', ifelse(rank > 100/3, 'High', 'Medium')))) %>%
select(state, breweriesToPplFactor) %>%
inner_join(yelp, by = 'state')
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'))
yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
ggplot(aes(x = reorder(state, breweriesToPpl, sum), y = breweriesToPpl, group = 1)) + geom_line() + coord_flip() + xlab('State (increasing in ratio of breweries to people)') +
ylab('Breweries Per Capita') + theme_bw() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
summary(yelp$breweriesToPplFactor)
yelp <- yelp %>%
mutate(breweriesToPplFactor = factor(breweriesToPplFactor, levels = levels(yelp$breweriesToPplFactor)[c(2,3,1)]),
take_out = recode(take_out, 'Yes' = 'Take Out Yes', 'No' = 'Take Out No'))
yelp %>%
group_by(breweriesToPplFactor, bike_parking, take_out) %>%
summarize(rating = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = breweriesToPplFactor, y = rating, group = bike_parking)) +
geom_bar(stat = 'identity', aes(fill = bike_parking), position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = rating - se, ymax = rating + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~take_out) +
ylim(0,5) +
scale_fill_manual(values = c('black','light grey'), name = 'Bike Parking Available') +
theme_bw() +
xlab('Breweries Per Capita') +
ylab('Yelp Rating') +
theme(legend.position = 'top',
strip.background = element_rect(fill = 'white', color = 'black'))
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'), name = 'Bike Parking Available') +
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'), name = 'Bike Parking Available')
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'), name = 'Bike Parking Available') +
theme(legend.position = 'top')
q()
q()
library(Hmisc)
library(tidyverse)
library(data.table)
yelp <- read.csv('../data/cleanYelp.csv')
yelp
yelp %>%
gather(rating_type, rating, ratings, my_ratings) %>%
mutate(rating_type = fct_recode(rating_type, 'Yelp Ratings' = 'ratings', 'My Converted Ratings' = 'my_ratings')) %>%
ggplot(aes(x = rating)) + geom_density(fill = 'blue', alpha = .8) + xlab('Ratings') + facet_wrap(~rating_type) +
theme_bw()
## convert relevant variables to numeric for correlations
relColumns <- yelp %>%
select(contains('totalhours'), contains('time'), price_range_moderate:accepts_apple_pay_yes, my_ratings, reviews, breweriesToPpl) %>%
colnames()
yelp[, relColumns] <- sapply(yelp[,relColumns], as.numeric)
m1 <- rcorr(as.matrix(yelp[,relColumns]))
## save out only correlations related to ratings
rs <- as.data.frame(m1$r)['my_ratings',]
ps <- as.data.frame(m1$P)['my_ratings',]
## keep significant correlations
critical_ps <- ps %>%
select(-my_ratings) %>%
gather(variable, p_value) %>%
filter(p_value < .05)
rs <- rs %>%
select(-my_ratings) %>%
gather(variable, r_value)
critical_rs <- rs[rs$variable %in% critical_ps$variable,]
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
ylab('Average Rating') + xlab('Price Range')
options(warn = -1)
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range, accepts_credit_cards) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings, na.rm = TRUE) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings, group = factor(accepts_credit_cards))) + geom_bar(stat = 'identity', aes(fill = factor(accepts_credit_cards)), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), position = position_dodge(width = .9), width = .5) + ylim(0,5) + theme_bw() +
xlab('Price Range') + ylab('Average Rating') +
theme(legend.position = 'top', axis.title.x = element_text(margin = margin(t = 10))) +
guides(fill = guide_legend(title='Does the brewery accept credit cards?')) + scale_fill_manual(values = c('black', 'light grey'))
## Group breweries per capita
yelp <- yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
arrange(breweriesToPpl) %>%
mutate(rank = 1:(nrow(.))) %>%
mutate(breweriesToPplFactor = factor(ifelse(rank < 50/3, 'Low', ifelse(rank > 100/3, 'High', 'Medium')))) %>%
select(state, breweriesToPplFactor) %>%
inner_join(yelp, by = 'state')
yelp %>%
group_by(take_out) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating')
yelp %>%
group_by(take_out, bike_parking) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = take_out, y = ratings, fill = bike_parking)) + geom_bar(stat='identity', aes(fill = bike_parking), position = position_dodge(width = .9)) +
geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5, position = position_dodge(width = .9)) + ylim(0,5) + theme_bw() +
xlab('Does the brewery have take out?') + ylab('Average Rating') +
scale_fill_manual(values = c('black', 'light grey'), name = 'Bike Parking Available') +
theme(legend.position = 'top')
yelp %>%
group_by(state) %>%
summarize(breweriesToPpl = max(breweriesToPpl)) %>%
ggplot(aes(x = reorder(state, breweriesToPpl, sum), y = breweriesToPpl, group = 1)) + geom_line() + coord_flip() + xlab('State (increasing in ratio of breweries to people)') +
ylab('Breweries Per Capita') + theme_bw() + theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
yelp <- yelp %>%
mutate(breweriesToPplFactor = factor(breweriesToPplFactor, levels = levels(yelp$breweriesToPplFactor)[c(2,3,1)]),
take_out = recode(take_out, 'Yes' = 'Take Out Yes', 'No' = 'Take Out No'))
yelp %>%
group_by(breweriesToPplFactor, bike_parking, take_out) %>%
summarize(rating = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = breweriesToPplFactor, y = rating, group = bike_parking)) +
geom_bar(stat = 'identity', aes(fill = bike_parking), position = position_dodge(width = 0.9)) +
geom_errorbar(aes(ymin = rating - se, ymax = rating + se), position = position_dodge(width = .9), width = .5) +
facet_wrap(~take_out) +
ylim(0,5) +
scale_fill_manual(values = c('black','light grey'), name = 'Bike Parking Available') +
theme_bw() +
xlab('Breweries Per Capita') +
ylab('Yelp Rating') +
theme(legend.position = 'top',
strip.background = element_rect(fill = 'white', color = 'black'))
print(relColumns)
relColumns
critical_rs
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
head(summary(m2))
summary(m2)
str(summary(m2))
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
str(summary(m2))
str(summary(m2)$coefficients)
summary(m2)$coefficients
str(summary(m2)$coefficients)
str(summary(m2)$coefficients)$`Pr(>|t|)`
summary(m2)$coefficients$`Pr(>|t|)`
summary(m2)$coefficients[`Pr(>|t|)`]
summary(m2)$coefficients['Pr(>|t|)']
summary(m2)$coefficients
summary(m2)$coefficients[,4]
summary(m2)$coefficients[1:10,4]
data.frame(summary(m2)$coefficients[1:10,4])
data.frame(Variable = summary(m2)$coefficients[1:10,4])
data.frame(Variable = summary(m2)$coefficients[,4])
data.frame(Variable = row.names(summary(m2)$coefficients[,4]))
row.names(summary(m2)$coefficients[,4])
row.names(data.frame(summary(m2)$coefficients[,4]))
data.frame(Variable = row.names(t), 'p Value' = t, row.names = 1:(nrow(t)))
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
t <- data.frame(summary(m2)$coefficients[,4])
data.frame(Variable = row.names(t), 'p Value' = t, row.names = 1:(nrow(t)))
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
t <- data.frame('pValue' = summary(m2)$coefficients[,4])
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))[,c(2:3)]
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))[,c(2,3)]
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))[,c(2,3)]
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
t <- data.frame('pValue' = summary(m2)$coefficients[,4])
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))
library(Hmisc)
library(tidyverse)
library(data.table)
yelp <- read.csv('../data/cleanYelp.csv')
yelp
yelp %>%
gather(rating_type, rating, ratings, my_ratings) %>%
mutate(rating_type = fct_recode(rating_type, 'Yelp Ratings' = 'ratings', 'My Converted Ratings' = 'my_ratings')) %>%
ggplot(aes(x = rating)) + geom_density(fill = 'blue', alpha = .8) + xlab('Ratings') + facet_wrap(~rating_type) +
theme_bw()
## convert relevant variables to numeric for correlations
relColumns <- yelp %>%
select(contains('totalhours'), contains('time'), price_range_moderate:accepts_apple_pay_yes, my_ratings, reviews, breweriesToPpl) %>%
colnames()
relColumns
yelp[, relColumns] <- sapply(yelp[,relColumns], as.numeric)
m1 <- rcorr(as.matrix(yelp[,relColumns]))
## save out only correlations related to ratings
rs <- as.data.frame(m1$r)['my_ratings',]
ps <- as.data.frame(m1$P)['my_ratings',]
## keep significant correlations
critical_ps <- ps %>%
select(-my_ratings) %>%
gather(variable, p_value) %>%
filter(p_value < .05)
rs <- rs %>%
select(-my_ratings) %>%
gather(variable, r_value)
critical_rs <- rs[rs$variable %in% critical_ps$variable,]
critical_rs
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
t <- data.frame('pValue' = summary(m2)$coefficients[,4])
data.frame(Variable = row.names(t), 'p Value' = t$pValue, row.names = 1:(nrow(t)))
t <- data.frame(Variable = row.names(t), 'pValue' = t$pValue, row.names = 1:(nrow(t)))
head(t)
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
t <- data.frame('pValue' = summary(m2)$coefficients[,4])
t <- data.frame(Variable = row.names(t), 'pValue' = t$pValue, row.names = 1:(nrow(t)))
t[,c(2,3)]
row.names(t)
row.names(summary(m2)$coefficients[,4])
row.names(summary(m2)$coefficients[,4])
summary(m2)$coefficients[,4]
data.table(summary(m2)$coefficients[,4])
data.table(pValue = summary(m2)$coefficients[,4])
data.frame(pValue = summary(m2)$coefficients[,4])
row.names(data.frame(pValue = summary(m2)$coefficients[,4]))
m2 <- lm(my_ratings ~ price_range_moderate * caters_yes * parking_street * take_out_yes * accepts_credit_cards * bike_parking_yes * accepts_apple_pay * breweriesToPpl, data = yelp)
v <- summary(m2)$coefficients[,4]
n <- row.names(data.frame(summary(m2)$coefficients[,4]))
data.frame(Variable = n, pValue = v, row.names = 1:(length(v)))
yelp %>%
filter(price_range != 'expensive') %>%
group_by(price_range) %>%
summarize(ratings = mean(my_ratings), se = sd(my_ratings) / sqrt(n())) %>%
ggplot(aes(x = price_range, y = ratings)) + geom_bar(stat='identity', width = .6) + geom_errorbar(aes(ymin = ratings - se, ymax = ratings + se), width = .5) + ylim(0,5) + theme_bw() +
ylab('Average Rating') + xlab('Price Range')
q()
